{"version":3,"file":"SoundA11yPlugin.min.js","mappings":"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","sources":["webpack://SoundA11yPlugin/webpack/universalModuleDefinition","webpack://SoundA11yPlugin/webpack/bootstrap","webpack://SoundA11yPlugin/webpack/runtime/define property getters","webpack://SoundA11yPlugin/webpack/runtime/hasOwnProperty shorthand","webpack://SoundA11yPlugin/webpack/runtime/make namespace object","webpack://SoundA11yPlugin/./components/options/OptionsModal.js","webpack://SoundA11yPlugin/./components/options/OpenOptionsButton.js","webpack://SoundA11yPlugin/./components/options/Toggle.js","webpack://SoundA11yPlugin/./components/options/Slider.js","webpack://SoundA11yPlugin/./utils/HTMLElementBuilder.js","webpack://SoundA11yPlugin/./main.js","webpack://SoundA11yPlugin/./components/register.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SoundA11yPlugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SoundA11yPlugin\"] = factory();\n\telse\n\t\troot[\"SoundA11yPlugin\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class OptionsModal extends HTMLElement {\n  constructor() {\n    super();\n\n    this.CAPTIONS_KEY = \"captionsOn\";\n    this.VOICE_SOUND_MANAGER_ID = \"voice\";\n    this.MUSIC_SOUND_MANAGER_ID = \"music\";\n    this.SFX_SOUND_MANAGER_ID = \"sfx\";\n\n    this._captionToggleHandler = this._captionToggleHandler.bind(this);\n    this._voiceVolumeChangeHandler = this._voiceVolumeChangeHandler.bind(this);\n    this._musicVolumeChangeHandler = this._musicVolumeChangeHandler.bind(this);\n    this._sfxVolumeChangeHandler = this._sfxVolumeChangeHandler.bind(this);\n    this._closeClickHandler = this._closeClickHandler.bind(this);\n    this._soundChannelVolumeChange = this._soundChannelVolumeChange.bind(this);\n\n    this.attachShadow({mode: \"open\"});\n\n    this.shadowRoot.innerHTML = `\n      <style>\n        .sr-only {\n          position:absolute;\n          left:-10000px;\n          top:auto;\n          width:1px;\n          height:1px;\n          overflow:hidden;\n         }\n\n         .esg-modal {\n            width: 600px;\n            height: 630px;\n            font-family: Arial, Helvetica, sans-serif;\n            display: flex;\n            flex-direction: column;\n            align-content: start;\n            --primary-color: #000000;\n         }\n\n         .esg-modal__content {\n            background: #ffffff;\n            border-radius: 20px;\n            border: 5px solid var(--primary-color);\n            padding: 60px;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n            align-content: center;\n         }\n\n         .esg-modal h2 {\n            font-size: 60px;\n            margin: 0 0 30px 0;\n            text-align: center;\n            letter-spacing: 1px;\n            background-color: var(--primary-color);\n            color: #ffffff;\n            width: 60%;\n            padding: 10px 20px;\n            border-radius: 50px;\n            margin: 0 auto -40px auto;\n            z-index: 1000;\n         }\n\n         .esg-modal__item {\n            margin-bottom: 30px;\n            margin-top: 30px;\n         }\n\n         .esg-modal__close {\n            cursor:pointer;\n            font-size: 32px;\n            max-width: 50%;\n            align-self: center;\n            border-radius: 10px;\n            padding: 10px 30px;\n            background: var(--primary-color);\n            color: #fff;\n            border: 5px solid var(--primary-color);\n            box-shadow: none;\n            letter-spacing: 1px;\n            font-weight: bold;\n            transition: .2s background ease-in;\n         }\n         .esg-modal__close:hover,\n         .esg-modal__close:focus {\n            background: #ffffff;\n            color: var(--primary-color);\n         }\n\n         .esg-modal[aria-hidden=\"false\"] {\n            display: flex;\n         }\n\n         .esg-modal[aria-hidden=\"true\"] {\n            display: none;\n         }\n      </style>\n      <div class=\"esg-modal\" role=\"dialog\"\n        aria-hidden=\"true\"\n        aria-label=\"game options\"\n        aria-describedby=\"esg-modal__desc\">\n            <h2>Options</h2>\n            <div class=\"esg-modal__content\">\n              <p id=\"esg-modal__desc\" class=\"sr-only\">Turn captioning on or off, or adjust the volume of music and voice.</p>\n              <div class=\"esg-modal__items\">\n                  <div class=\"esg-modal__item\">\n                    <esg-toggle id=\"captions-toggle\" label=\"Captions\"></esg-toggle>\n                  </div>\n                  <div class=\"esg-modal__item\">\n                    <esg-slider id=\"voice-slider\" class=\"esg-modal__item\" label=\"Voice\"></esg-slider>\n                  </div>\n                  <div class=\"esg-modal__item\">\n                    <esg-slider id=\"sfx-slider\" class=\"esg-modal__item\" label=\"SFX\"></esg-slider>\n                  </div>\n                  <div class=\"esg-modal__item\">\n                    <esg-slider id=\"music-slider\" class=\"esg-modal__item\" label=\"Music\"></esg-slider>\n                  </div>\n              </div>\n              <button class=\"esg-modal__close\" aria-label=\"close\">Close</button>\n            </div>\n      </div>\n    `;\n\n    this.captionsToggleElement = this.shadowRoot.getElementById(\"captions-toggle\");\n    this.voiceSliderElement = this.shadowRoot.getElementById(\"voice-slider\");\n    this.musicSliderElement = this.shadowRoot.getElementById(\"music-slider\");\n    this.sfxSliderElement = this.shadowRoot.getElementById(\"sfx-slider\");\n    this.modalElement = this.shadowRoot.querySelector(\".esg-modal\");\n    this.closeButton = this.modalElement.querySelector(\".esg-modal__close\");\n    this.header = this.modalElement.querySelector(\"h2\");\n    this.modalContent = this.modalElement.querySelector(\".esg-modal__content\");\n  }\n\n  _captionToggleHandler(event) {\n    if(event.detail.on === 'true') {\n      window.esparkGame.registry.set(this.CAPTIONS_KEY, true);\n    } else {\n      window.esparkGame.registry.set(this.CAPTIONS_KEY, false);\n    }\n  }\n\n  _changeSoundManagerVolume(event, soundManagerKey) {\n    window.esparkGame.sound[soundManagerKey].volume = event.detail.value;\n  }\n\n  _voiceVolumeChangeHandler(event) {\n    this._changeSoundManagerVolume(event, this.VOICE_SOUND_MANAGER_ID);\n  }\n\n  _musicVolumeChangeHandler(event) {\n    this._changeSoundManagerVolume(event, this.MUSIC_SOUND_MANAGER_ID);\n  }\n\n  _sfxVolumeChangeHandler(event) {\n    this._changeSoundManagerVolume(event, this.SFX_SOUND_MANAGER_ID);\n  }\n\n  _closeClickHandler(event) {\n    this.open = this._getOppositeValueOfValueAttr(this.open);\n    this.modalElement.setAttribute(\"aria-hidden\", this._getOppositeValueOfValueAttr(this.open));\n    let activeScenes = window.esparkGame.scene.getScenes(true);\n    activeScenes.forEach((scene) => {\n      scene.input.mouse.enabled = true;\n    });\n  }\n\n  _getOppositeValueOfValueAttr(isOpen) {\n    return isOpen === 'true' ? 'false' : 'true';\n  }\n\n  _soundChannelVolumeChange(channel, slider) {\n    window.esparkGame.sound[channel].on('volume', () => {\n      const delay = setTimeout(() => {\n        const newVolume = window.esparkGame.sound[channel].volume;\n        slider.setAttribute(\"value\", newVolume);\n        clearTimeout(delay);\n      }, 1000);\n    });\n  }\n\n  connectedCallback() {\n    this.captionsToggleElement.addEventListener(\"toggle\", this._captionToggleHandler);\n    this.voiceSliderElement.addEventListener(\"volumechange\", this._voiceVolumeChangeHandler);\n    this.musicSliderElement.addEventListener(\"volumechange\", this._musicVolumeChangeHandler);\n    this.sfxSliderElement.addEventListener(\"volumechange\", this._sfxVolumeChangeHandler);\n    this.closeButton.addEventListener(\"click\", this._closeClickHandler, true);\n    this.modalElement.setAttribute(\"aria-hidden\",\n      this._getOppositeValueOfValueAttr(this.open));\n    this.captionsToggleElement.setAttribute(\"toggle-on\", window.esparkGame.registry.get(this.CAPTIONS_KEY));\n    this._soundChannelVolumeChange(this.MUSIC_SOUND_MANAGER_ID, this.musicSliderElement);\n    this._soundChannelVolumeChange(this.VOICE_SOUND_MANAGER_ID, this.voiceSliderElement);\n    this._soundChannelVolumeChange(this.SFX_SOUND_MANAGER_ID, this.sfxSliderElement);\n  }\n\n  disconnectedCallback() {\n    this.captionsToggleElement.removeEventListener(\"toggle\", this._captionToggleHandler);\n    this.voiceSliderElement.removeEventListener(\"volumechange\", this._voiceVolumeChangeHandler);\n    this.musicSliderElement.removeEventListener(\"volumechange\", this._musicVolumeChangeHandler);\n    this.sfxSliderElement.removeEventListener(\"volumechange\", this._sfxVolumeChangeHandler);\n\n  }\n\n  static get observedAttributes() {\n    return [\"open\", \"color\"];\n  }\n\n  get open() {\n    return this.getAttribute(\"open\");\n  }\n\n  set open(isOpen) {\n    this.setAttribute(\"open\", isOpen);\n  }\n\n  get color() {\n    return this.getAttribute(\"color\");\n  }\n\n  set color(color) {\n    this.icon.setAttribute(\"color\", color);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch(name) {\n      case \"open\":\n        this.modalElement.setAttribute(\"aria-hidden\",\n          this._getOppositeValueOfValueAttr(newValue));\n        break;\n      case \"color\":\n        this.modalElement.style.setProperty(\"--primary-color\", newValue);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export default class OptionsModal extends HTMLElement {\n  constructor() {\n    super();\n\n    this.attachShadow({mode: \"open\"});\n    this.shadowRoot.innerHTML = `\n      <style>\n        button {\n            --button-primary-color: \"darkgray\";\n            --button-size: 90px;\n            font-size: 90px;\n            font-weight: bold;\n            cursor: pointer;\n            background: #ffffff;\n            width: var(--button-size);\n            height: var(--button-size);\n            line-height: 87px;\n            border-radius: 50%;\n            border-width: 1px;\n            border-color: rgba(0, 0, 0, .55);\n            justify-content: center;\n            align-content: center;\n            transition: .1s background-color ease-in-out;\n        }\n\n        svg {\n            fill: var(--button-primary-color);\n            transition: .1s fill ease-in-out;\n        }\n\n        button:hover {\n            background-color: var(--button-primary-color);\n        }\n\n        button:hover svg{\n            fill: #ffffff;\n        }\n      </style>\n      <button aria-label=\"Game Options\">\n        <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 50 50\" width=\"65px\" height=\"65px\">    <path d=\"M47.16,21.221l-5.91-0.966c-0.346-1.186-0.819-2.326-1.411-3.405l3.45-4.917c0.279-0.397,0.231-0.938-0.112-1.282 l-3.889-3.887c-0.347-0.346-0.893-0.391-1.291-0.104l-4.843,3.481c-1.089-0.602-2.239-1.08-3.432-1.427l-1.031-5.886 C28.607,2.35,28.192,2,27.706,2h-5.5c-0.49,0-0.908,0.355-0.987,0.839l-0.956,5.854c-1.2,0.345-2.352,0.818-3.437,1.412l-4.83-3.45 c-0.399-0.285-0.942-0.239-1.289,0.106L6.82,10.648c-0.343,0.343-0.391,0.883-0.112,1.28l3.399,4.863 c-0.605,1.095-1.087,2.254-1.438,3.46l-5.831,0.971c-0.482,0.08-0.836,0.498-0.836,0.986v5.5c0,0.485,0.348,0.9,0.825,0.985 l5.831,1.034c0.349,1.203,0.831,2.362,1.438,3.46l-3.441,4.813c-0.284,0.397-0.239,0.942,0.106,1.289l3.888,3.891 c0.343,0.343,0.884,0.391,1.281,0.112l4.87-3.411c1.093,0.601,2.248,1.078,3.445,1.424l0.976,5.861C21.3,47.647,21.717,48,22.206,48 h5.5c0.485,0,0.9-0.348,0.984-0.825l1.045-5.89c1.199-0.353,2.348-0.833,3.43-1.435l4.905,3.441 c0.398,0.281,0.938,0.232,1.282-0.111l3.888-3.891c0.346-0.347,0.391-0.894,0.104-1.292l-3.498-4.857 c0.593-1.08,1.064-2.222,1.407-3.408l5.918-1.039c0.479-0.084,0.827-0.5,0.827-0.985v-5.5C47.999,21.718,47.644,21.3,47.16,21.221z M25,32c-3.866,0-7-3.134-7-7c0-3.866,3.134-7,7-7s7,3.134,7,7C32,28.866,28.866,32,25,32z\"/></svg>\n      </button>\n    `;\n\n    this._handleOnClick = this._handleOnClick.bind(this);\n    this.buttonElement = this.shadowRoot.querySelector('button');\n    this.icon = this.buttonElement.querySelector('svg');\n    this.modal = null;\n  }\n\n  _handleOnClick () {\n    if(this.modal == null) {\n      console.warn(\"Unable to find specified options modal.\");\n      return;\n    }\n    this.modal.setAttribute(\"open\", true);\n    this.modal.focus();\n    let activeScenes = window.esparkGame.scene.getScenes(true);\n    activeScenes.forEach((scene) => {\n      scene.input.mouse.enabled = false;\n    });\n  }\n\n  connectedCallback() {\n    this.modal = document.getElementById(this.modalId);\n    this.buttonElement.addEventListener(\"click\", this._handleOnClick);\n  }\n\n  disconnectedCallback() {\n    this.buttonElement.removeEventListener(\"click\", this._handleOnClick);\n  }\n\n  get modalId() {\n    return this.getAttribute('modal-id');\n  }\n\n  set modalId(modalId) {\n    this.setAttribute(\"modal-id\", modalId);\n  }\n\n  get color() {\n    return this.getAttribute('modal-id');\n  }\n\n  set color(color) {\n    this.icon.setAttribute(\"modal-id\", color);\n  }\n\n  static get observedAttributes() {\n    return [\"modal-id\", \"color\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch(name) {\n      case \"modal-id\":\n        this.modal = document.getElementById(newValue);\n        break;\n      case \"color\":\n        // this.icon.setAttribute(\"fill\", newValue);\n        this.buttonElement.style.setProperty(\"--button-primary-color\", newValue);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export default class Toggle extends HTMLElement{\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.innerHTML = `\n      <style>\n        button {\n            cursor: pointer;\n            background: #fff;\n            box-shadow: none;\n            border:none;\n            font-size: 36px;\n            padding: 0;\n            letter-spacing: 2px;\n            border: 3px solid #555555;\n            border-radius: 30px;\n            overflow: hidden;\n        }\n        .esg-toggle-state {\n            padding: 8px 15px;\n        }\n\n        button span.on{\n            color: #555555;\n        }\n\n        button span.off{\n            background: #555555;\n            color: #fff;\n        }\n\n        button[aria-pressed=\"true\"] {\n            border-color: var(--primary-color);\n        }\n\n        button[aria-pressed=\"true\"] span.off {\n            background: none;\n            color: #555555;\n            opacity: 1;\n        }\n        button[aria-pressed=\"true\"] span.on{\n            background: var(--primary-color);\n            color: #fff;\n        }\n        .es-label {\n          width: 210px;\n          font-size: 32px;\n          display: inline-block;\n          letter-spacing: 1px;\n        }\n      </style>\n      <div class=\"esg-toggle esg-component\">\n        <span class=\"es-label\">${this.label}</span>\n        <button type=\"button\" role=\"switch\" aria-label=\"${this.label}\" id=\"${this.id}\">\n            <span class=\"esg-toggle-state on\">On</span><span class=\"esg-toggle-state off\">Off</span>\n        </button>\n      </div>\n    `;\n\n    this.shadowtoggleButton = this.shadowRoot.querySelector(\"button\");\n    this.shadowtoggleButtonLabel = this.shadowRoot.querySelector(\".es-label\");\n    this.handleToggle = this.handleToggle.bind(this);\n    this.toggleEvent = new CustomEvent(\"toggle\", {\n      detail: {\n        on: this.toggleOn\n      }\n    });\n  }\n\n  handleToggle () {\n    this.shadowtoggleButton.toggleAttribute(\"aria-pressed\");\n    this.toggleOn = this.toggleOn.toLowerCase() === 'true' ? false : true;\n    this.toggleEvent.detail.on = this.toggleOn;\n    this.dispatchEvent(this.toggleEvent);\n  }\n\n  connectedCallback() {\n    this.shadowtoggleButton.addEventListener(\"click\", this.handleToggle);\n  }\n\n  disconnectedCallback() {\n    this.shadowtoggleButton.removeEventListener(\"click\", this.handleToggle);\n  }\n\n  static get observedAttributes() {\n    return [\"id\", \"label\", \"toggle-on\"];\n  }\n\n  get id() {\n    return this.getAttribute(\"id\");\n  }\n\n  get label() {\n    return this.getAttribute(\"label\");\n  }\n\n  get toggleOn() {\n    return this.getAttribute(\"toggle-on\");\n  }\n\n  set id(id) {\n    this.setAttribute(\"id\", id);\n  }\n\n  set label(label) {\n    this.setAttribute(\"label\", label);\n  }\n\n  set toggleOn(toggleOnVal) {\n    this.setAttribute(\"toggle-on\", toggleOnVal);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch(name) {\n      case \"label\":\n        this.shadowtoggleButtonLabel.innerHTML = newValue;\n        this.shadowtoggleButton.setAttribute(\"aria-label\", newValue);\n        break;\n      case \"id\":\n        this.shadowtoggleButton.id = newValue;\n        break;\n      case \"toggle-on\":\n        this.shadowtoggleButton.setAttribute(\"aria-pressed\", newValue);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export default class Slider extends HTMLElement{\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.innerHTML = `\n      <style>\n        .esg-slider {\n            display: flex;\n            justify-content: space-between;\n            align-content: center;\n        }\n\n        .esg-slider__input {\n            flex-grow: 1;\n            cursor: pointer;\n            height: 25px;\n        }\n\n        .esg-slider__input::-moz-range-thumb,\n        .esg-slider__input::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            appearance: none;\n            width: 25px;\n            height: 25px;\n            background: var(--primary-color);\n            cursor: pointer;\n        }\n\n        label {\n          display: inline-block;\n          font-size: 32px;\n          width: 210px;\n          letter-spacing: 1px;\n        }\n\n        input[type=range] {\n          height: 34px;\n          -webkit-appearance: none;\n          margin: 10px 0;\n          background: none;\n        }\n\n        input[type=range]::-webkit-slider-runnable-track {\n          width: 100%;\n          height: 15px;\n          cursor: pointer;\n          animate: 0.2s;\n          background: var(--primary-color);\n          border-radius: 25px;\n        }\n\n        input[type=range]::-webkit-slider-thumb {\n          box-shadow: 1px 1px 1px #000031;\n          border: 1px solid rgba(0,0,0, .9);\n          height: 38px;\n          width: 38px;\n          border-radius: 50%;\n          background: #FFFFFF;\n          cursor: pointer;\n          -webkit-appearance: none;\n          margin-top: -13px;\n        }\n        input[type=range]:focus::-webkit-slider-runnable-track {\n          background: var(--primary-color);\n        }\n        input[type=range]::-moz-range-track {\n          width: 100%;\n          height: 11px;\n          cursor: pointer;\n          animate: 0.2s;\n          box-shadow: 1px 1px 1px #000000;\n          background: #0f4863;\n          border: 0px solid #010101;\n        }\n        input[type=range]::-moz-range-thumb {\n          box-shadow: 1px 1px 1px #000031;\n          border: 1px solid rgba(0,0,0, .9);\n          height: 38px;\n          width: 38px;\n          border-radius: 50%;\n          background: #FFFFFF;\n          cursor: pointer;\n          -webkit-appearance: none;\n          margin-top: -13px;\n        }\n      </style>\n      <div class=\"esg-slider esg-element\">\n        <label for=\"${this.id}\">${this.label}</label>\n        <input type=\"range\" step=\"0.1\" min=\"0\" max=\"1\" value=\"${this.value}\" id=\"${this.id}\" class=\"esg-slider__input\">\n      </div>\n    `;\n\n    this.labelElement = this.shadowRoot.querySelector(\".esg-slider label\");\n    this.inputElement = this.shadowRoot.querySelector(\".esg-slider input\");\n    this.handleChange = this.handleChange.bind(this);\n    this.volumeChangeEvent = new CustomEvent(\"volumechange\", {\n      detail: {\n        value: this.value\n      }\n    });\n  }\n\n\n  handleChange () {\n    this.value = this.inputElement.value;\n    this.volumeChangeEvent.detail.value = this.inputElement.value;\n    this.dispatchEvent(this.volumeChangeEvent);\n  }\n\n  connectedCallback() {\n    this.inputElement.addEventListener(\"change\", this.handleChange);\n  }\n\n  disconnectedCallback() {\n    this.inputElement.removeEventListener(\"change\", this.handleChange);\n  }\n\n  static get observedAttributes() {\n    return [\"id\", \"label\", \"value\"];\n  }\n\n  get id() {\n    return this.getAttribute(\"id\");\n  }\n\n  get label() {\n    return this.getAttribute(\"label\");\n  }\n\n  get value() {\n    return this.getAttribute(\"value\");\n  }\n\n  set id(id) {\n    this.setAttribute(\"id\", id);\n  }\n\n  set label(label) {\n    this.setAttribute(\"label\", label);\n  }\n\n  set value(value) {\n    this.setAttribute(\"value\", value);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch(name) {\n      case \"label\":\n        this.labelElement.textContent = newValue;\n        break;\n      case \"id\":\n        this.labelElement.setAttribute(\"for\", newValue);\n        this.inputElement.id = newValue;\n        break;\n      case \"value\":\n        this.inputElement.setAttribute(\"value\", newValue);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export default class HTMLElementBuilder {\n  constructor(tagName, textContent = \"\") {\n    this.element = document.createElement(tagName);\n    this.element.textContent = textContent;\n\n    return this;\n  }\n\n  addAttributes(attributes = {}) {\n    if(!attributes || attributes.constructor !== Object) {\n      return new Error(\"Parameter for addAriaAttributes should be an object. Example: {aria-label: \\\"Play\\\"\");\n    }\n\n    for (let attribute in attributes) {\n      let ariaAttributeValue = attributes[attribute];\n      this.element.setAttribute(attribute, ariaAttributeValue);\n    }\n\n    return this;\n  }\n\n  addClasses(...classNames) {\n    classNames.forEach((className) => {\n      this.element.classList.add(className);\n    });\n\n    return this;\n  }\n\n  appendElements(elements) {\n    const domElements = [].concat(elements || []);\n\n    domElements.forEach((element) => {\n      this.element.appendChild(element);\n    });\n\n    return this;\n  }\n\n  setInnerHtml(htmlString) {\n    this.element.innerHTML = htmlString;\n\n    return this;\n  }\n}\n","import {registerCustomPluginComponents} from \"./components/register\";\nimport HTMLElementBuilder from \"./utils/HTMLElementBuilder\";\n\nexport default class SoundA11yPlugin extends Phaser.Plugins.ScenePlugin {\n    constructor(scene, pluginManager) {\n        super(scene, pluginManager);\n        this.scene = scene;\n        this.captions = {};\n        this.activeCaptions = [];\n        this.captionBottomOffset = 80;\n        this.defaultModalX = 500;\n        this.defaultModalY = 100;\n    }\n\n    init(configData={}) {\n      const modalX = configData.modalX || 500;\n      const modalY = configData.modalY || 100;\n      const primaryColor = configData.primaryColor || \"#0d68c2\";\n      this._addOptionsUIElements(modalX, modalY, primaryColor);\n      this.captions = configData.captions || {};\n      this.game.sound.music.setVolume(configData?.volume?.music || .2);\n      this.game.sound.sfx.setVolume(configData?.volume?.sfx || .5);\n      this.game.sound.voice.setVolume(configData?.volume?.voice || .5);\n    }\n\n    //  Called when the Plugin is booted by the PluginManager.\n    //  If you need to reference other systems in the Scene (like the Loader or DisplayList) then set-up those references now, not in the constructor.\n    boot() {\n      registerCustomPluginComponents();\n      this._registerSoundChannels();\n      this._buildRegistry();\n      this._injectCaptionCSS();\n      /*\n          List of unused eventEmitters to activate matching methods of this plugin\n      */\n\n     // eventEmitter.on('start', this.start, this);\n\n      //eventEmitter.on('preupdate', this.preUpdate, this);\n      //eventEmitter.on('postupdate', this.postUpdate, this);\n\n      //eventEmitter.on('pause', this.pause, this);\n      //eventEmitter.on('resume', this.resume, this);\n\n      //eventEmitter.on('sleep', this.sleep, this);\n      //eventEmitter.on('wake', this.wake, this);\n\n      //eventEmitter.on('shutdown', this.shutdown, this);\n      // eventEmitter.on('start', this.install, this);\n    }\n\n    //  Called when a Scene is started by the SceneManager. The Scene is now active, visible and running.\n    start() {\n\n    }\n\n    //  Called every Scene step - phase 1\n    preUpdate(time, delta) {}\n\n    //  Called every Scene step - phase 2\n    update(time, delta) {}\n\n    //  Called every Scene step - phase 3\n    postUpdate(time, delta) {}\n\n    //  Called when a Scene is paused. A paused scene doesn't have its Step run, but still renders.\n    pause() {}\n\n    //  Called when a Scene is resumed from a paused state.\n    resume() {}\n\n    //  Called when a Scene is put to sleep. A sleeping scene doesn't update or render, but isn't destroyed or shutdown. preUpdate events still fire.\n    sleep() {}\n\n    //  Called when a Scene is woken from a sleeping state.\n    wake() {}\n\n    //  Called when a Scene shuts down, it may then come back again later (which will invoke the 'start' event) but should be considered dormant.\n    shutdown() {}\n\n    //  Called when a Scene is destroyed by the Scene Manager. There is no coming back from a destroyed Scene, so clear up all resources here.\n    destroy() {\n        this.shutdown();\n        this.scene = undefined;\n    }\n\n    addVoiceSound(name) {\n      return this.game.sound.voice.add(name);\n    }\n\n    addSFXSound(name) {\n      return this.game.sound.sfx.add(name);\n    }\n\n    addMusicSound(name) {\n      return this.game.sound.music.add(name);\n    }\n\n    stopVoice() {\n      this.game.sound.voice.stopAll();\n    }\n\n    stopSFX() {\n      this.game.sound.sfx.stopAll();\n    }\n\n    stopMusic() {\n      this.game.sound.music.stopAll();\n    }\n\n    stopAll() {\n      this.stopMusic();\n      this.stopSFX();\n      this.stopVoice();\n      this._removeCaptions();\n    }\n\n    play(soundObject, marker=null, config={}) {\n      return new Promise(function(resolve, reject) {\n        try {\n          if(this.game.registry.get(\"captionsOn\")) {\n            this._playCaptionedSound(soundObject, marker, config).then(() => {\n              resolve(soundObject);\n            }).catch((error) => {\n              reject(error)\n            });\n          } else{\n            this._playSound(soundObject, marker, config).then(() => {\n              resolve(soundObject);\n            }).catch((error) => {\n              reject(error)\n            });\n          }\n        } catch (error) {\n          reject(error);\n        }\n      }.bind(this));\n    }\n\n    _playSound(soundObject, marker, config) {\n      soundObject.manager.stopAll();\n      return new Promise(function(resolve, reject) {\n        try {\n          let sound;\n          if (marker) {\n            soundObject.play(marker, config);\n          } else {\n            soundObject.play(config);\n          }\n\n          soundObject.on(\"complete\", () => resolve(sound));\n        } catch (error) {\n          reject( error);\n        }\n      });\n    }\n\n    _playCaptionedSound(soundObject, marker=null, config={}) {\n      return new Promise(function (resolve, reject) {\n      try {\n        const markers = Object.keys(soundObject.markers);\n        if(markers.length === 0) {\n          this._startCaptionedAudio(soundObject, marker, config);\n\n          soundObject.on('complete', (function() {\n            this._removeCaptions();\n            soundObject.removeAllListeners();\n            resolve(soundObject);\n          }).bind(this));\n\n          return soundObject;\n        }\n\n        // setting up the generator to play subsequent markers after the\n        // sound object has completed playing.\n        const soundMarkerGenerator = this._SoundMarkerIterator(markers);\n        soundObject.on(\"complete\", () => {\n          const currentMarker = soundMarkerGenerator.next();\n          if (currentMarker.done) {\n            this._removeCaptions();\n            soundObject.removeAllListeners();\n            resolve(soundObject);\n          } else {\n            this._startCaptionedAudio(soundObject, currentMarker.value, config);\n          }\n        });\n\n        this._startCaptionedAudio(soundObject, markers[0], config);\n      } catch(error) {\n        reject(error);\n      }\n    }.bind(this));\n    }\n\n    _startCaptionedAudio(soundObject, marker=null, config={}) {\n      this._removeCaptions();\n\n      soundObject.on('play', (function() {\n        const captionElement = this._addCaptions(marker || soundObject.key)\n        this.activeCaptions.push(captionElement);\n      }).bind(this));\n\n\n      this._playSound(soundObject, marker, config);\n\n      return soundObject;\n    }\n\n    _removeCaptions() {\n      this.activeCaptions.forEach((caption) => {\n        caption.remove();\n      });\n    }\n\n    _addCaptions(captionKey) {\n      this._removeCaptions();\n      const captionHtmlElement = new HTMLElementBuilder(\"div\");\n      captionHtmlElement.addClasses(\"captions\");\n      if(captionKey in this.captions) {\n        captionHtmlElement.appendElements(this._createCaptionCueElement(this.captions[captionKey]));\n      } else {\n        console.warn(`caption key: ${captionKey} was not found in captions`);\n      }\n\n      this.scene.add.dom(this.game.config.width/2, this.game.config.height-this.captionBottomOffset,\n        captionHtmlElement.element).setOrigin(.5, 1);\n\n      return captionHtmlElement.element;\n    }\n\n    _createCaptionCueElement(cueText) {\n      const captionCueElement = new HTMLElementBuilder(\"p\", cueText);\n      captionCueElement.addClasses(\"cue\");\n\n      return captionCueElement.element;\n    }\n\n    * _SoundMarkerIterator(markers) {\n      for(let i=1; i < markers.length; i++) {\n        yield markers[i];\n      }\n\n      return;\n    }\n\n    _buildRegistry() {\n      if(!window.hasOwnProperty(\"esparkGame\")) {\n        window.esparkGame = this.game;\n        window.esparkGame.registry.set({\n          backgroundMusicOn: true,\n          captionsOn: true\n        });\n      }\n    }\n\n    _registerSoundChannels () {\n      if(this.game.sound && !this.game.sound.hasOwnProperty(\"sfx\")) {\n        this.game.sound.sfx = Phaser.Sound.SoundManagerCreator.create(this.game)\n      }\n\n      if(this.game.sound && !this.game.sound.hasOwnProperty(\"voice\")) {\n        this.game.sound.voice = Phaser.Sound.SoundManagerCreator.create(this.game)\n      }\n\n      if(this.game.sound && !this.game.sound.hasOwnProperty(\"music\")) {\n        this.game.sound.music = Phaser.Sound.SoundManagerCreator.create(this.game)\n      }\n    }\n\n    _addOptionsUIElements(modalX, modalY, primaryColor) {\n      const optionsModalBuilder = new HTMLElementBuilder(\"options-modal\")\n        .addAttributes({\"open\": false, \"id\": \"options-modal\", \"color\": primaryColor});\n\n      this.scene.add.dom(modalX, modalY, optionsModalBuilder.element).setDepth(1000);\n\n      const optionsButtonBuilder = new HTMLElementBuilder(\"options-button\")\n        .addAttributes({\"modal-id\": \"options-modal\", color: primaryColor});\n      this.scene.add.dom(this.game.config.width - 100, 100, optionsButtonBuilder.element).setDepth(1000);\n    }\n\n    _injectCaptionCSS() {\n      if(!window.esparkGame.hasOwnProperty(\"cssInjected\")) {\n        const cssStyles = `\n        .captions {\n            z-index: 100;\n            max-width: 75%;\n          }\n\n        .captions .cue {\n            color: white;\n            font-size: 48px;\n            background: rgba(0,0,0, .8);\n            padding:5px 10px;\n            width: fit-content;\n            margin: 0 auto;\n            text-align: center;\n            font-family: Arial, Helvetica, sans-serif;\n          }\n        `;\n        const css = document.createElement(\"style\");\n        css.textContent = cssStyles;\n        document.body.appendChild(css);\n        window.esparkGame.cssInjected = true;\n      }\n    }\n}\n","import OptionsModal from \"./options/OptionsModal\";\nimport OpenOptionsButton from \"./options/OpenOptionsButton\";\nimport Toggle from \"./options/Toggle\";\nimport Slider from \"./options/Slider\";\n\nexport const registerCustomPluginComponents = () => {\n  if(!customElements.get('options-button')) {\n    customElements.define('options-button', OpenOptionsButton);\n  }\n\n  if(!customElements.get('options-modal')) {\n    customElements.define('options-modal', OptionsModal);\n  }\n\n  if(!customElements.get('esg-slider')) {\n    customElements.define('esg-slider', Slider);\n  }\n\n  if(!customElements.get('esg-toggle')) {\n    customElements.define('esg-toggle', Toggle);\n  }\n}\n\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","OptionsModal","HTMLElement","constructor","super","this","CAPTIONS_KEY","VOICE_SOUND_MANAGER_ID","MUSIC_SOUND_MANAGER_ID","SFX_SOUND_MANAGER_ID","_captionToggleHandler","bind","_voiceVolumeChangeHandler","_musicVolumeChangeHandler","_sfxVolumeChangeHandler","_closeClickHandler","_soundChannelVolumeChange","attachShadow","mode","shadowRoot","innerHTML","captionsToggleElement","getElementById","voiceSliderElement","musicSliderElement","sfxSliderElement","modalElement","querySelector","closeButton","header","modalContent","event","detail","on","window","esparkGame","registry","set","_changeSoundManagerVolume","soundManagerKey","sound","volume","open","_getOppositeValueOfValueAttr","setAttribute","scene","getScenes","forEach","input","mouse","enabled","isOpen","channel","slider","delay","setTimeout","newVolume","clearTimeout","connectedCallback","addEventListener","disconnectedCallback","removeEventListener","observedAttributes","getAttribute","color","icon","attributeChangedCallback","name","oldValue","newValue","style","setProperty","_handleOnClick","buttonElement","modal","console","warn","focus","document","modalId","Toggle","label","id","shadowtoggleButton","shadowtoggleButtonLabel","handleToggle","toggleEvent","CustomEvent","toggleOn","toggleAttribute","toLowerCase","dispatchEvent","toggleOnVal","Slider","labelElement","inputElement","handleChange","volumeChangeEvent","textContent","HTMLElementBuilder","tagName","element","createElement","addAttributes","attributes","Error","attribute","ariaAttributeValue","addClasses","classNames","className","classList","add","appendElements","elements","concat","appendChild","setInnerHtml","htmlString","SoundA11yPlugin","Phaser","Plugins","ScenePlugin","pluginManager","captions","activeCaptions","captionBottomOffset","defaultModalX","defaultModalY","init","configData","modalX","modalY","primaryColor","_addOptionsUIElements","game","music","setVolume","sfx","voice","boot","customElements","_registerSoundChannels","_buildRegistry","_injectCaptionCSS","start","preUpdate","time","delta","update","postUpdate","pause","resume","sleep","wake","shutdown","destroy","undefined","addVoiceSound","addSFXSound","addMusicSound","stopVoice","stopAll","stopSFX","stopMusic","_removeCaptions","play","soundObject","marker","config","Promise","resolve","reject","_playCaptionedSound","then","catch","error","_playSound","manager","markers","keys","length","_startCaptionedAudio","removeAllListeners","soundMarkerGenerator","_SoundMarkerIterator","currentMarker","next","done","captionElement","_addCaptions","push","caption","remove","captionKey","captionHtmlElement","_createCaptionCueElement","dom","width","height","setOrigin","cueText","captionCueElement","i","backgroundMusicOn","captionsOn","Sound","SoundManagerCreator","create","optionsModalBuilder","setDepth","optionsButtonBuilder","cssStyles","css","body","cssInjected"],"sourceRoot":""}