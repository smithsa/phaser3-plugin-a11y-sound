{"version":3,"file":"SoundA11yPlugin.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,kBAAmB,GAAIH,GACJ,iBAAZC,QACdA,QAAyB,gBAAID,IAE7BD,EAAsB,gBAAIC,IAR5B,CASGK,MAAM,WACT,O,wBCTA,IAAIC,EAAsB,CCA1BA,EAAwB,SAASL,EAASM,GACzC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EF,EAAwB,SAASQ,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICC/FT,EAAwB,SAASL,GACX,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,M,kDCLxC,MAAMC,UAAqBC,YACxCC,cACEC,QAEAC,KAAKC,aAAe,aACpBD,KAAKE,uBAAyB,QAC9BF,KAAKG,uBAAyB,QAC9BH,KAAKI,qBAAuB,MAE5BJ,KAAKK,sBAAwBL,KAAKK,sBAAsBC,KAAKN,MAC7DA,KAAKO,0BAA4BP,KAAKO,0BAA0BD,KAAKN,MACrEA,KAAKQ,0BAA4BR,KAAKQ,0BAA0BF,KAAKN,MACrEA,KAAKS,wBAA0BT,KAAKS,wBAAwBH,KAAKN,MACjEA,KAAKU,mBAAqBV,KAAKU,mBAAmBJ,KAAKN,MACvDA,KAAKW,0BAA4BX,KAAKW,0BAA0BL,KAAKN,MACrEA,KAAKY,sBAAwBZ,KAAKY,sBAAsBN,KAAKN,MAE7DA,KAAKa,aAAa,CAACC,KAAM,SAEzBd,KAAKe,WAAWC,UAAY,y2GA0G5BhB,KAAKiB,sBAAwBjB,KAAKe,WAAWG,eAAe,mBAC5DlB,KAAKmB,mBAAqBnB,KAAKe,WAAWG,eAAe,gBACzDlB,KAAKoB,mBAAqBpB,KAAKe,WAAWG,eAAe,gBACzDlB,KAAKqB,iBAAmBrB,KAAKe,WAAWG,eAAe,cACvDlB,KAAKsB,aAAetB,KAAKe,WAAWQ,cAAc,cAClDvB,KAAKwB,YAAcxB,KAAKsB,aAAaC,cAAc,qBACnDvB,KAAKyB,OAASzB,KAAKsB,aAAaC,cAAc,MAC9CvB,KAAK0B,aAAe1B,KAAKsB,aAAaC,cAAc,uBAGtDlB,sBAAsBsB,GACG,SAApBA,EAAMC,OAAOC,GACdC,OAAOC,WAAWC,SAASC,IAAIjC,KAAKC,cAAc,IAElDD,KAAKY,wBACLkB,OAAOC,WAAWC,SAASC,IAAIjC,KAAKC,cAAc,IAItDiC,0BAA0BP,EAAOQ,GAC/BL,OAAOC,WAAWK,MAAMD,GAAiBE,OAASV,EAAMC,OAAOjC,MAGjEY,0BAA0BoB,GACxB3B,KAAKkC,0BAA0BP,EAAO3B,KAAKE,wBAG7CM,0BAA0BmB,GACxB3B,KAAKkC,0BAA0BP,EAAO3B,KAAKG,wBAG7CM,wBAAwBkB,GACtB3B,KAAKkC,0BAA0BP,EAAO3B,KAAKI,sBAG7CM,mBAAmBiB,GACjB3B,KAAKsC,KAAOtC,KAAKuC,6BAA6BvC,KAAKsC,MACnDtC,KAAKsB,aAAakB,aAAa,cAAexC,KAAKuC,6BAA6BvC,KAAKsC,OAClER,OAAOC,WAAWU,MAAMC,WAAU,GACxCC,SAASF,IACpBA,EAAMG,MAAMC,MAAMC,SAAU,KAIhCP,6BAA6BQ,GAC3B,MAAkB,SAAXA,EAAoB,QAAU,OAGvCpC,0BAA0BqC,EAASC,GACjCnB,OAAOC,WAAWK,MAAMY,GAASnB,GAAG,UAAU,KAC5C,MAAMqB,EAAQC,YAAW,KACvB,MAAMC,EAAYtB,OAAOC,WAAWK,MAAMY,GAASX,OACnDY,EAAOT,aAAa,QAASY,GAC7BC,aAAaH,KACZ,QAIPtC,wBACyBkB,OAAOC,WAAWC,SAAS7C,IAAI,kBACvCwD,SAASW,IACtBA,EAAQC,YAIZC,oBACExD,KAAKiB,sBAAsBwC,iBAAiB,SAAUzD,KAAKK,uBAC3DL,KAAKmB,mBAAmBsC,iBAAiB,eAAgBzD,KAAKO,2BAC9DP,KAAKoB,mBAAmBqC,iBAAiB,eAAgBzD,KAAKQ,2BAC9DR,KAAKqB,iBAAiBoC,iBAAiB,eAAgBzD,KAAKS,yBAC5DT,KAAKwB,YAAYiC,iBAAiB,QAASzD,KAAKU,oBAAoB,GACpEV,KAAKsB,aAAakB,aAAa,cAC7BxC,KAAKuC,6BAA6BvC,KAAKsC,OACzCtC,KAAKiB,sBAAsBuB,aAAa,YAAaV,OAAOC,WAAWC,SAAS7C,IAAIa,KAAKC,eACzFD,KAAKW,0BAA0BX,KAAKG,uBAAwBH,KAAKoB,oBACjEpB,KAAKW,0BAA0BX,KAAKE,uBAAwBF,KAAKmB,oBACjEnB,KAAKW,0BAA0BX,KAAKI,qBAAsBJ,KAAKqB,kBAGjEqC,uBACE1D,KAAKiB,sBAAsB0C,oBAAoB,SAAU3D,KAAKK,uBAC9DL,KAAKmB,mBAAmBwC,oBAAoB,eAAgB3D,KAAKO,2BACjEP,KAAKoB,mBAAmBuC,oBAAoB,eAAgB3D,KAAKQ,2BACjER,KAAKqB,iBAAiBsC,oBAAoB,eAAgB3D,KAAKS,yBAGtDmD,gCACT,MAAO,CAAC,OAAQ,SAGdtB,WACF,OAAOtC,KAAK6D,aAAa,QAGvBvB,SAAKS,GACP/C,KAAKwC,aAAa,OAAQO,GAGxBe,YACF,OAAO9D,KAAK6D,aAAa,SAGvBC,UAAMA,GACR9D,KAAK+D,KAAKvB,aAAa,QAASsB,GAGlCE,yBAAyBC,EAAMC,EAAUC,GACvC,OAAOF,GACL,IAAK,OACHjE,KAAKsB,aAAakB,aAAa,cAC7BxC,KAAKuC,6BAA6B4B,IACpC,MACF,IAAK,QACHnE,KAAKsB,aAAa8C,MAAMC,YAAY,kBAAmBF,KC9OhD,MAAM,UAAqBtE,YACxCC,cACEC,QAEAC,KAAKa,aAAa,CAACC,KAAM,SACzBd,KAAKe,WAAWC,UAAY,wxEAsC5BhB,KAAKsE,eAAiBtE,KAAKsE,eAAehE,KAAKN,MAC/CA,KAAKuE,cAAgBvE,KAAKe,WAAWQ,cAAc,UACnDvB,KAAK+D,KAAO/D,KAAKuE,cAAchD,cAAc,OAC7CvB,KAAKwE,MAAQ,KAGfF,iBACE,GAAiB,MAAdtE,KAAKwE,MAEN,YADAC,QAAQC,KAAK,2CAGf1E,KAAKwE,MAAMhC,aAAa,QAAQ,GAChCxC,KAAKwE,MAAMG,QACQ7C,OAAOC,WAAWU,MAAMC,WAAU,GACxCC,SAASF,IACpBA,EAAMG,MAAMC,MAAMC,SAAU,KAIhCU,oBACExD,KAAKwE,MAAQI,SAAS1D,eAAelB,KAAK6E,SAC1C7E,KAAKuE,cAAcd,iBAAiB,QAASzD,KAAKsE,gBAGpDZ,uBACE1D,KAAKuE,cAAcZ,oBAAoB,QAAS3D,KAAKsE,gBAGnDO,cACF,OAAO7E,KAAK6D,aAAa,YAGvBgB,YAAQA,GACV7E,KAAKwC,aAAa,WAAYqC,GAG5Bf,YACF,OAAO9D,KAAK6D,aAAa,YAGvBC,UAAMA,GACR9D,KAAK+D,KAAKvB,aAAa,WAAYsB,GAG1BF,gCACT,MAAO,CAAC,WAAY,SAGtBI,yBAAyBC,EAAMC,EAAUC,GACvC,OAAOF,GACL,IAAK,WACHjE,KAAKwE,MAAQI,SAAS1D,eAAeiD,GACrC,MACF,IAAK,QAEHnE,KAAKuE,cAAcH,MAAMC,YAAY,yBAA0BF,KClGxD,MAAMW,UAAejF,YAClCC,cACEC,QAEAC,KAAKa,aAAa,CAAEC,KAAM,SAC1Bd,KAAKe,WAAWC,UAAY,osCAgDChB,KAAK+E,yEACoB/E,KAAK+E,cAAc/E,KAAKgF,oJAM9EhF,KAAKiF,mBAAqBjF,KAAKe,WAAWQ,cAAc,UACxDvB,KAAKkF,wBAA0BlF,KAAKe,WAAWQ,cAAc,aAC7DvB,KAAKmF,aAAenF,KAAKmF,aAAa7E,KAAKN,MAC3CA,KAAKoF,YAAc,IAAIC,YAAY,SAAU,CAC3CzD,OAAQ,CACNC,GAAI7B,KAAKsF,YAKfH,eACEnF,KAAKiF,mBAAmBM,gBAAgB,gBACxCvF,KAAKsF,SAA2C,SAAhCtF,KAAKsF,SAASE,cAC9BxF,KAAKoF,YAAYxD,OAAOC,GAAK7B,KAAKsF,SAClCtF,KAAKyF,cAAczF,KAAKoF,aAG1B5B,oBACExD,KAAKiF,mBAAmBxB,iBAAiB,QAASzD,KAAKmF,cAGzDzB,uBACE1D,KAAKiF,mBAAmBtB,oBAAoB,QAAS3D,KAAKmF,cAGjDvB,gCACT,MAAO,CAAC,KAAM,QAAS,aAGrBoB,SACF,OAAOhF,KAAK6D,aAAa,MAGvBkB,YACF,OAAO/E,KAAK6D,aAAa,SAGvByB,eACF,OAAOtF,KAAK6D,aAAa,aAGvBmB,OAAGA,GACLhF,KAAKwC,aAAa,KAAMwC,GAGtBD,UAAMA,GACR/E,KAAKwC,aAAa,QAASuC,GAGzBO,aAASI,GACX1F,KAAKwC,aAAa,YAAakD,GAGjC1B,yBAAyBC,EAAMC,EAAUC,GACvC,OAAOF,GACL,IAAK,QACHjE,KAAKkF,wBAAwBlE,UAAYmD,EACzCnE,KAAKiF,mBAAmBzC,aAAa,aAAc2B,GACnD,MACF,IAAK,KACHnE,KAAKiF,mBAAmBD,GAAKb,EAC7B,MACF,IAAK,YACHnE,KAAKiF,mBAAmBzC,aAAa,eAAgB2B,KC3H9C,MAAMwB,UAAe9F,YAClCC,cACEC,QAEAC,KAAKa,aAAa,CAAEC,KAAM,SAC1Bd,KAAKe,WAAWC,UAAY,qzEAmFVhB,KAAKgF,OAAOhF,KAAK+E,gFACyB/E,KAAKL,cAAcK,KAAKgF,qDAIpFhF,KAAK4F,aAAe5F,KAAKe,WAAWQ,cAAc,qBAClDvB,KAAK6F,aAAe7F,KAAKe,WAAWQ,cAAc,qBAClDvB,KAAK8F,aAAe9F,KAAK8F,aAAaxF,KAAKN,MAC3CA,KAAK+F,kBAAoB,IAAIV,YAAY,eAAgB,CACvDzD,OAAQ,CACNjC,MAAOK,KAAKL,SAMlBmG,eACE9F,KAAKL,MAAQK,KAAK6F,aAAalG,MAC/BK,KAAK+F,kBAAkBnE,OAAOjC,MAAQK,KAAK6F,aAAalG,MACxDK,KAAKyF,cAAczF,KAAK+F,mBAG1BvC,oBACExD,KAAK6F,aAAapC,iBAAiB,SAAUzD,KAAK8F,cAGpDpC,uBACE1D,KAAK6F,aAAalC,oBAAoB,SAAU3D,KAAK8F,cAG5ClC,gCACT,MAAO,CAAC,KAAM,QAAS,SAGrBoB,SACF,OAAOhF,KAAK6D,aAAa,MAGvBkB,YACF,OAAO/E,KAAK6D,aAAa,SAGvBlE,YACF,OAAOK,KAAK6D,aAAa,SAGvBmB,OAAGA,GACLhF,KAAKwC,aAAa,KAAMwC,GAGtBD,UAAMA,GACR/E,KAAKwC,aAAa,QAASuC,GAGzBpF,UAAMA,GACRK,KAAKwC,aAAa,QAAS7C,GAG7BqE,yBAAyBC,EAAMC,EAAUC,GACvC,OAAOF,GACL,IAAK,QACHjE,KAAK4F,aAAaI,YAAc7B,EAChC,MACF,IAAK,KACHnE,KAAK4F,aAAapD,aAAa,MAAO2B,GACtCnE,KAAK6F,aAAab,GAAKb,EACvB,MACF,IAAK,QACHnE,KAAK6F,aAAarD,aAAa,QAAS2B,KC5JjC,MAAM8B,EACnBnG,YAAYoG,EAASF,EAAc,IAIjC,OAHAhG,KAAKmG,QAAUvB,SAASwB,cAAcF,GACtClG,KAAKmG,QAAQH,YAAcA,EAEpBhG,KAGTqG,cAAcC,EAAa,IACzB,IAAIA,GAAcA,EAAWxG,cAAgBd,OAC3C,OAAO,IAAIuH,MAAM,qFAGnB,IAAK,IAAIC,KAAaF,EAAY,CAChC,IAAIG,EAAqBH,EAAWE,GACpCxG,KAAKmG,QAAQ3D,aAAagE,EAAWC,GAGvC,OAAOzG,KAGT0G,cAAcC,GAKZ,OAJAA,EAAWhE,SAASiE,IAClB5G,KAAKmG,QAAQU,UAAUC,IAAIF,MAGtB5G,KAGT+G,eAAeC,GAOb,MANoB,GAAGC,OAAOD,GAAY,IAE9BrE,SAASwD,IACnBnG,KAAKmG,QAAQe,YAAYf,MAGpBnG,KAGTmH,aAAaC,GAGX,OAFApH,KAAKmG,QAAQnF,UAAYoG,EAElBpH,MCvCI,MAAMqH,UAAwBC,OAAOC,QAAQC,YACxD1H,YAAY2C,EAAOgF,GACf1H,MAAM0C,EAAOgF,GACbzH,KAAKyC,MAAQA,EACbzC,KAAK0H,oBAAsB,GAC3B1H,KAAK2H,cAAgB,IACrB3H,KAAK4H,cAAgB,IAGzBC,KAAKC,EAAW,IACd,MAAMC,EAASD,EAAWC,QAAU,IAC9BC,EAASF,EAAWE,QAAU,IAC9BC,EAAeH,EAAWG,cAAgB,UAC1CC,EAAaJ,EAAWI,aAAc,EACtCC,EAAWL,EAAWK,UAAY,GACxCnI,KAAKoI,KAAKpG,SAASC,IAAI,WAAYkG,GACnCnI,KAAKoI,KAAKpG,SAASC,IAAI,iBAAkB,IACzCjC,KAAKoI,KAAKpG,SAASC,IAAI,aAAciG,GACrClI,KAAKqI,sBAAsBN,EAAQC,EAAQC,GAC3CjI,KAAKoI,KAAKhG,MAAMkG,MAAMC,UAAUT,GAAYzF,QAAQiG,OAAS,IAC7DtI,KAAKoI,KAAKhG,MAAMoG,IAAID,UAAUT,GAAYzF,QAAQmG,KAAO,IACzDxI,KAAKoI,KAAKhG,MAAMqG,MAAMF,UAAUT,GAAYzF,QAAQoG,OAAS,GAK/DC,OCvBEC,eAAexJ,IAAI,mBACrBwJ,eAAelK,OAAO,iBAAkB,GAGtCkK,eAAexJ,IAAI,kBACrBwJ,eAAelK,OAAO,gBAAiBmB,GAGrC+I,eAAexJ,IAAI,eACrBwJ,eAAelK,OAAO,aAAckH,GAGlCgD,eAAexJ,IAAI,eACrBwJ,eAAelK,OAAO,aAAcqG,GDYlC9E,KAAK4I,yBACL5I,KAAK6I,iBACL7I,KAAK8I,oBAIPC,UACI/I,KAAKgJ,WACLhJ,KAAKyC,WAAQwG,EAGjBnC,IAAI9D,EAASiB,EAAMiF,EAAO,IACxB,OAAOlJ,KAAKoI,KAAKhG,MAAMY,GAAS8D,IAAI7C,EAAMiF,GAG5CC,KAAKnG,EAAQ,MACG,MAAXA,GACDhD,KAAKoI,KAAKhG,MAAMY,GAASoG,UAEX,SAAXpG,GAAoBhD,KAAKqJ,oBAG5BrJ,KAAKoI,KAAKhG,MAAMkG,MAAMc,UACtBpJ,KAAKoI,KAAKhG,MAAMoG,IAAIY,UACpBpJ,KAAKoI,KAAKhG,MAAMqG,MAAMW,UACtBpJ,KAAKqJ,mBAITC,KAAKC,EAAaC,EAAO,KAAMN,EAAO,IACpC,OAAO,IAAIO,QAAQ,SAASC,EAASC,GACnC,IACE3J,KAAK4J,oBAAoBL,EAAaC,EAAQN,GAAQW,MAAK,KACzDH,EAAQH,MACPO,OAAOC,IACRJ,EAAOI,MAET,MAAOA,GACPJ,EAAOI,KAETzJ,KAAKN,OAGT4J,oBAAoBL,EAAaC,EAAO,KAAMN,EAAO,IAEnD,OADAK,EAAYS,QAAQZ,UACb,IAAIK,QAAQ,SAAUC,EAASC,GACtC,IACE,MAAMM,EAAUjL,OAAOkL,KAAKX,EAAYU,SACxC,GAAsB,IAAnBA,EAAQE,OAST,OARAnK,KAAKoK,qBAAqBb,EAAaC,EAAQN,GAE/CK,EAAY1H,GAAG,WAAY,WACzB7B,KAAKqJ,kBACLE,EAAYc,qBACZX,EAAQH,IACPjJ,KAAKN,OAEDuJ,EAKT,MAAMe,EAAuBtK,KAAKuK,qBAAqBN,GACvDV,EAAY1H,GAAG,YAAY,KACzB,MAAM2I,EAAgBF,EAAqBG,OACvCD,EAAcE,MAChB1K,KAAKqJ,kBACLE,EAAYc,qBACZX,EAAQH,IAERvJ,KAAKoK,qBAAqBb,EAAaiB,EAAc7K,MAAOuJ,MAIhElJ,KAAKoK,qBAAqBb,EAAaU,EAAQ,GAAIf,GACnD,MAAMa,GACNJ,EAAOI,KAETzJ,KAAKN,OAGPoK,qBAAqBb,EAAaC,EAAO,KAAMN,EAAO,IAepD,OAdAlJ,KAAKqJ,kBAELE,EAAY1H,GAAG,OAAQ,WACrB,GAAG7B,KAAKoI,KAAKpG,SAAS7C,IAAI,cAAe,CACvC,MAAMwL,EAAiB3K,KAAK4K,aAAapB,GAAUD,EAAYzK,KAC/D,IAAI+L,EAAiB7K,KAAKoI,KAAKpG,SAAS7C,IAAI,kBAC5C0L,EAAeC,KAAKH,GACpB3K,KAAKoI,KAAKpG,SAASC,IAAI,iBAAkB4I,KAE1CvK,KAAKN,OAGRA,KAAK+K,WAAWxB,EAAaC,EAAQN,GAE9BK,EAGTwB,WAAWxB,EAAaC,EAAQN,GAE9B,OADAK,EAAYS,QAAQZ,UACb,IAAIK,SAAQ,SAASC,EAASC,GACnC,IACE,IAAIvH,EACAoH,EACFD,EAAYD,KAAKE,EAAQN,GAEzBK,EAAYD,KAAKJ,GAGnBK,EAAY1H,GAAG,YAAY,IAAM6H,EAAQtH,KACzC,MAAO2H,GACPJ,EAAQI,OAKdV,kBACyBrJ,KAAKoI,KAAKpG,SAAS7C,IAAI,kBAC/BwD,SAASW,IACtBA,EAAQC,YAIZqH,aAAaI,GACXhL,KAAKqJ,kBACL,MAAM4B,EAAqB,IAAIhF,EAAmB,OAClDgF,EAAmBvE,WAAW,YAC9B,MAAMyB,EAAWnI,KAAKoI,KAAKpG,SAAS7C,IAAI,YAUxC,OATG6L,KAAc7C,EACf8C,EAAmBlE,eAAe/G,KAAKkL,yBAAyB/C,EAAS6C,KAEzEvG,QAAQC,KAAK,gBAAgBsG,+BAG/BhL,KAAKyC,MAAMqE,IAAIqE,IAAInL,KAAKoI,KAAKc,OAAOkC,MAAM,EAAGpL,KAAKoI,KAAKc,OAAOmC,OAAOrL,KAAK0H,oBACxEuD,EAAmB9E,SAASmF,UAAU,GAAI,GAAGC,SAAS,KAEjDN,EAAmB9E,QAG5B+E,yBAAyBM,GACvB,MAAMC,EAAoB,IAAIxF,EAAmB,IAAKuF,GAGtD,OAFAC,EAAkB/E,WAAW,OAEtB+E,EAAkBtF,QAG3B,sBAAuB8D,GACrB,IAAI,IAAIyB,EAAE,EAAGA,EAAIzB,EAAQE,OAAQuB,UACzBzB,EAAQyB,GAMlB7C,iBACM/G,OAAOvC,eAAe,gBACxBS,KAAKoI,KAAKpG,SAASC,IAAI,CACrBiG,YAAY,EACZyD,aAAa,EACbxD,SAAU,GACV0C,eAAgB,KAGlB/I,OAAOC,WAAa/B,KAAKoI,MAI7BQ,yBACK5I,KAAKoI,KAAKhG,QAAUpC,KAAKoI,KAAKhG,MAAM7C,eAAe,SACpDS,KAAKoI,KAAKhG,MAAMoG,IAAMlB,OAAOsE,MAAMC,oBAAoBC,OAAO9L,KAAKoI,OAGlEpI,KAAKoI,KAAKhG,QAAUpC,KAAKoI,KAAKhG,MAAM7C,eAAe,WACpDS,KAAKoI,KAAKhG,MAAMqG,MAAQnB,OAAOsE,MAAMC,oBAAoBC,OAAO9L,KAAKoI,OAGpEpI,KAAKoI,KAAKhG,QAAUpC,KAAKoI,KAAKhG,MAAM7C,eAAe,WACpDS,KAAKoI,KAAKhG,MAAMkG,MAAQhB,OAAOsE,MAAMC,oBAAoBC,OAAO9L,KAAKoI,OAIzEC,sBAAsBN,EAAQC,EAAQC,GACpC,MAAM8D,EAAsB,IAAI9F,EAAmB,iBAChDI,cAAc,CAAC,MAAQ,EAAO,GAAM,gBAAiB,MAAS4B,IAEjEjI,KAAKyC,MAAMqE,IAAIqE,IAAIpD,EAAQC,EAAQ+D,EAAoB5F,SAASoF,SAAS,KAEzE,MAAMS,EAAuB,IAAI/F,EAAmB,kBACjDI,cAAc,CAAC,WAAY,gBAAiBvC,MAAOmE,IACtDjI,KAAKyC,MAAMqE,IAAIqE,IAAInL,KAAKoI,KAAKc,OAAOkC,MAAQ,IAAK,IAAKY,EAAqB7F,SAASoF,SAAS,KAG/FzC,oBACE,IAAI9I,KAAKoI,KAAKpG,SAAS7C,IAAI,eAAgB,CACzC,MAAM8M,EAAY,yaAiBZC,EAAMtH,SAASwB,cAAc,SACnC8F,EAAIlG,YAAciG,EAClBrH,SAASuH,KAAKjF,YAAYgF,GAC1BlM,KAAKoI,KAAKpG,SAASC,IAAI,eAAe,K","sources":["webpack://SoundA11yPlugin/webpack/universalModuleDefinition","webpack://SoundA11yPlugin/webpack/bootstrap","webpack://SoundA11yPlugin/webpack/runtime/define property getters","webpack://SoundA11yPlugin/webpack/runtime/hasOwnProperty shorthand","webpack://SoundA11yPlugin/webpack/runtime/make namespace object","webpack://SoundA11yPlugin/./components/options/OptionsModal.js","webpack://SoundA11yPlugin/./components/options/OpenOptionsButton.js","webpack://SoundA11yPlugin/./components/options/Toggle.js","webpack://SoundA11yPlugin/./components/options/Slider.js","webpack://SoundA11yPlugin/./utils/HTMLElementBuilder.js","webpack://SoundA11yPlugin/./main.js","webpack://SoundA11yPlugin/./components/register.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SoundA11yPlugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SoundA11yPlugin\"] = factory();\n\telse\n\t\troot[\"SoundA11yPlugin\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class OptionsModal extends HTMLElement {\n  constructor() {\n    super();\n\n    this.CAPTIONS_KEY = \"captionsOn\";\n    this.VOICE_SOUND_MANAGER_ID = \"voice\";\n    this.MUSIC_SOUND_MANAGER_ID = \"music\";\n    this.SFX_SOUND_MANAGER_ID = \"sfx\";\n\n    this._captionToggleHandler = this._captionToggleHandler.bind(this);\n    this._voiceVolumeChangeHandler = this._voiceVolumeChangeHandler.bind(this);\n    this._musicVolumeChangeHandler = this._musicVolumeChangeHandler.bind(this);\n    this._sfxVolumeChangeHandler = this._sfxVolumeChangeHandler.bind(this);\n    this._closeClickHandler = this._closeClickHandler.bind(this);\n    this._soundChannelVolumeChange = this._soundChannelVolumeChange.bind(this);\n    this._removeActiveCaptions = this._removeActiveCaptions.bind(this);\n\n    this.attachShadow({mode: \"open\"});\n\n    this.shadowRoot.innerHTML = `\n      <style>\n        .sr-only {\n          position:absolute;\n          left:-10000px;\n          top:auto;\n          width:1px;\n          height:1px;\n          overflow:hidden;\n         }\n\n         .esg-modal {\n            width: 600px;\n            height: 630px;\n            font-family: Arial, Helvetica, sans-serif;\n            display: flex;\n            flex-direction: column;\n            align-content: start;\n            --primary-color: #000000;\n         }\n\n         .esg-modal__content {\n            background: #ffffff;\n            border-radius: 20px;\n            border: 5px solid var(--primary-color);\n            padding: 60px;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n            align-content: center;\n         }\n\n         .esg-modal h2 {\n            font-size: 60px;\n            margin: 0 0 30px 0;\n            text-align: center;\n            letter-spacing: 1px;\n            background-color: var(--primary-color);\n            color: #ffffff;\n            width: 60%;\n            padding: 10px 20px;\n            border-radius: 50px;\n            margin: 0 auto -40px auto;\n            z-index: 1000;\n         }\n\n         .esg-modal__item {\n            margin-bottom: 30px;\n            margin-top: 30px;\n         }\n\n         .esg-modal__close {\n            cursor:pointer;\n            font-size: 32px;\n            max-width: 50%;\n            align-self: center;\n            border-radius: 10px;\n            padding: 10px 30px;\n            background: var(--primary-color);\n            color: #fff;\n            border: 5px solid var(--primary-color);\n            box-shadow: none;\n            letter-spacing: 1px;\n            font-weight: bold;\n            transition: .2s background ease-in;\n         }\n         .esg-modal__close:hover,\n         .esg-modal__close:focus {\n            background: #ffffff;\n            color: var(--primary-color);\n         }\n\n         .esg-modal[aria-hidden=\"false\"] {\n            display: flex;\n         }\n\n         .esg-modal[aria-hidden=\"true\"] {\n            display: none;\n         }\n      </style>\n      <div class=\"esg-modal\" role=\"dialog\"\n        aria-hidden=\"true\"\n        aria-label=\"game options\"\n        aria-describedby=\"esg-modal__desc\">\n            <h2>Options</h2>\n            <div class=\"esg-modal__content\">\n              <p id=\"esg-modal__desc\" class=\"sr-only\">Turn captioning on or off, or adjust the volume of music and voice.</p>\n              <div class=\"esg-modal__items\">\n                  <div class=\"esg-modal__item\">\n                    <esg-toggle id=\"captions-toggle\" label=\"Captions\"></esg-toggle>\n                  </div>\n                  <div class=\"esg-modal__item\">\n                    <esg-slider id=\"voice-slider\" class=\"esg-modal__item\" label=\"Voice\"></esg-slider>\n                  </div>\n                  <div class=\"esg-modal__item\">\n                    <esg-slider id=\"sfx-slider\" class=\"esg-modal__item\" label=\"SFX\"></esg-slider>\n                  </div>\n                  <div class=\"esg-modal__item\">\n                    <esg-slider id=\"music-slider\" class=\"esg-modal__item\" label=\"Music\"></esg-slider>\n                  </div>\n              </div>\n              <button class=\"esg-modal__close\" aria-label=\"close\">Close</button>\n            </div>\n      </div>\n    `;\n\n    this.captionsToggleElement = this.shadowRoot.getElementById(\"captions-toggle\");\n    this.voiceSliderElement = this.shadowRoot.getElementById(\"voice-slider\");\n    this.musicSliderElement = this.shadowRoot.getElementById(\"music-slider\");\n    this.sfxSliderElement = this.shadowRoot.getElementById(\"sfx-slider\");\n    this.modalElement = this.shadowRoot.querySelector(\".esg-modal\");\n    this.closeButton = this.modalElement.querySelector(\".esg-modal__close\");\n    this.header = this.modalElement.querySelector(\"h2\");\n    this.modalContent = this.modalElement.querySelector(\".esg-modal__content\");\n  }\n\n  _captionToggleHandler(event) {\n    if(event.detail.on === 'true') {\n      window.esparkGame.registry.set(this.CAPTIONS_KEY, true);\n    } else {\n      this._removeActiveCaptions();\n      window.esparkGame.registry.set(this.CAPTIONS_KEY, false);\n    }\n  }\n\n  _changeSoundManagerVolume(event, soundManagerKey) {\n    window.esparkGame.sound[soundManagerKey].volume = event.detail.value;\n  }\n\n  _voiceVolumeChangeHandler(event) {\n    this._changeSoundManagerVolume(event, this.VOICE_SOUND_MANAGER_ID);\n  }\n\n  _musicVolumeChangeHandler(event) {\n    this._changeSoundManagerVolume(event, this.MUSIC_SOUND_MANAGER_ID);\n  }\n\n  _sfxVolumeChangeHandler(event) {\n    this._changeSoundManagerVolume(event, this.SFX_SOUND_MANAGER_ID);\n  }\n\n  _closeClickHandler(event) {\n    this.open = this._getOppositeValueOfValueAttr(this.open);\n    this.modalElement.setAttribute(\"aria-hidden\", this._getOppositeValueOfValueAttr(this.open));\n    let activeScenes = window.esparkGame.scene.getScenes(true);\n    activeScenes.forEach((scene) => {\n      scene.input.mouse.enabled = true;\n    });\n  }\n\n  _getOppositeValueOfValueAttr(isOpen) {\n    return isOpen === 'true' ? 'false' : 'true';\n  }\n\n  _soundChannelVolumeChange(channel, slider) {\n    window.esparkGame.sound[channel].on('volume', () => {\n      const delay = setTimeout(() => {\n        const newVolume = window.esparkGame.sound[channel].volume;\n        slider.setAttribute(\"value\", newVolume);\n        clearTimeout(delay);\n      }, 1000);\n    });\n  }\n\n  _removeActiveCaptions() {\n    const activeCaptions = window.esparkGame.registry.get(\"activeCaptions\");\n    activeCaptions.forEach((caption) => {\n      caption.remove();\n    });\n  }\n\n  connectedCallback() {\n    this.captionsToggleElement.addEventListener(\"toggle\", this._captionToggleHandler);\n    this.voiceSliderElement.addEventListener(\"volumechange\", this._voiceVolumeChangeHandler);\n    this.musicSliderElement.addEventListener(\"volumechange\", this._musicVolumeChangeHandler);\n    this.sfxSliderElement.addEventListener(\"volumechange\", this._sfxVolumeChangeHandler);\n    this.closeButton.addEventListener(\"click\", this._closeClickHandler, true);\n    this.modalElement.setAttribute(\"aria-hidden\",\n      this._getOppositeValueOfValueAttr(this.open));\n    this.captionsToggleElement.setAttribute(\"toggle-on\", window.esparkGame.registry.get(this.CAPTIONS_KEY));\n    this._soundChannelVolumeChange(this.MUSIC_SOUND_MANAGER_ID, this.musicSliderElement);\n    this._soundChannelVolumeChange(this.VOICE_SOUND_MANAGER_ID, this.voiceSliderElement);\n    this._soundChannelVolumeChange(this.SFX_SOUND_MANAGER_ID, this.sfxSliderElement);\n  }\n\n  disconnectedCallback() {\n    this.captionsToggleElement.removeEventListener(\"toggle\", this._captionToggleHandler);\n    this.voiceSliderElement.removeEventListener(\"volumechange\", this._voiceVolumeChangeHandler);\n    this.musicSliderElement.removeEventListener(\"volumechange\", this._musicVolumeChangeHandler);\n    this.sfxSliderElement.removeEventListener(\"volumechange\", this._sfxVolumeChangeHandler);\n  }\n\n  static get observedAttributes() {\n    return [\"open\", \"color\"];\n  }\n\n  get open() {\n    return this.getAttribute(\"open\");\n  }\n\n  set open(isOpen) {\n    this.setAttribute(\"open\", isOpen);\n  }\n\n  get color() {\n    return this.getAttribute(\"color\");\n  }\n\n  set color(color) {\n    this.icon.setAttribute(\"color\", color);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch(name) {\n      case \"open\":\n        this.modalElement.setAttribute(\"aria-hidden\",\n          this._getOppositeValueOfValueAttr(newValue));\n        break;\n      case \"color\":\n        this.modalElement.style.setProperty(\"--primary-color\", newValue);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export default class OptionsModal extends HTMLElement {\n  constructor() {\n    super();\n\n    this.attachShadow({mode: \"open\"});\n    this.shadowRoot.innerHTML = `\n      <style>\n        button {\n            --button-primary-color: \"darkgray\";\n            --button-size: 90px;\n            font-size: 90px;\n            font-weight: bold;\n            cursor: pointer;\n            background: #ffffff;\n            width: var(--button-size);\n            height: var(--button-size);\n            line-height: 87px;\n            border-radius: 50%;\n            border-width: 1px;\n            border-color: rgba(0, 0, 0, .55);\n            justify-content: center;\n            align-content: center;\n            transition: .1s background-color ease-in-out;\n        }\n\n        svg {\n            fill: var(--button-primary-color);\n            transition: .1s fill ease-in-out;\n        }\n\n        button:hover {\n            background-color: var(--button-primary-color);\n        }\n\n        button:hover svg{\n            fill: #ffffff;\n        }\n      </style>\n      <button aria-label=\"Game Options\">\n        <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 50 50\" width=\"65px\" height=\"65px\">    <path d=\"M47.16,21.221l-5.91-0.966c-0.346-1.186-0.819-2.326-1.411-3.405l3.45-4.917c0.279-0.397,0.231-0.938-0.112-1.282 l-3.889-3.887c-0.347-0.346-0.893-0.391-1.291-0.104l-4.843,3.481c-1.089-0.602-2.239-1.08-3.432-1.427l-1.031-5.886 C28.607,2.35,28.192,2,27.706,2h-5.5c-0.49,0-0.908,0.355-0.987,0.839l-0.956,5.854c-1.2,0.345-2.352,0.818-3.437,1.412l-4.83-3.45 c-0.399-0.285-0.942-0.239-1.289,0.106L6.82,10.648c-0.343,0.343-0.391,0.883-0.112,1.28l3.399,4.863 c-0.605,1.095-1.087,2.254-1.438,3.46l-5.831,0.971c-0.482,0.08-0.836,0.498-0.836,0.986v5.5c0,0.485,0.348,0.9,0.825,0.985 l5.831,1.034c0.349,1.203,0.831,2.362,1.438,3.46l-3.441,4.813c-0.284,0.397-0.239,0.942,0.106,1.289l3.888,3.891 c0.343,0.343,0.884,0.391,1.281,0.112l4.87-3.411c1.093,0.601,2.248,1.078,3.445,1.424l0.976,5.861C21.3,47.647,21.717,48,22.206,48 h5.5c0.485,0,0.9-0.348,0.984-0.825l1.045-5.89c1.199-0.353,2.348-0.833,3.43-1.435l4.905,3.441 c0.398,0.281,0.938,0.232,1.282-0.111l3.888-3.891c0.346-0.347,0.391-0.894,0.104-1.292l-3.498-4.857 c0.593-1.08,1.064-2.222,1.407-3.408l5.918-1.039c0.479-0.084,0.827-0.5,0.827-0.985v-5.5C47.999,21.718,47.644,21.3,47.16,21.221z M25,32c-3.866,0-7-3.134-7-7c0-3.866,3.134-7,7-7s7,3.134,7,7C32,28.866,28.866,32,25,32z\"/></svg>\n      </button>\n    `;\n\n    this._handleOnClick = this._handleOnClick.bind(this);\n    this.buttonElement = this.shadowRoot.querySelector('button');\n    this.icon = this.buttonElement.querySelector('svg');\n    this.modal = null;\n  }\n\n  _handleOnClick () {\n    if(this.modal == null) {\n      console.warn(\"Unable to find specified options modal.\");\n      return;\n    }\n    this.modal.setAttribute(\"open\", true);\n    this.modal.focus();\n    let activeScenes = window.esparkGame.scene.getScenes(true);\n    activeScenes.forEach((scene) => {\n      scene.input.mouse.enabled = false;\n    });\n  }\n\n  connectedCallback() {\n    this.modal = document.getElementById(this.modalId);\n    this.buttonElement.addEventListener(\"click\", this._handleOnClick);\n  }\n\n  disconnectedCallback() {\n    this.buttonElement.removeEventListener(\"click\", this._handleOnClick);\n  }\n\n  get modalId() {\n    return this.getAttribute('modal-id');\n  }\n\n  set modalId(modalId) {\n    this.setAttribute(\"modal-id\", modalId);\n  }\n\n  get color() {\n    return this.getAttribute('modal-id');\n  }\n\n  set color(color) {\n    this.icon.setAttribute(\"modal-id\", color);\n  }\n\n  static get observedAttributes() {\n    return [\"modal-id\", \"color\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch(name) {\n      case \"modal-id\":\n        this.modal = document.getElementById(newValue);\n        break;\n      case \"color\":\n        // this.icon.setAttribute(\"fill\", newValue);\n        this.buttonElement.style.setProperty(\"--button-primary-color\", newValue);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export default class Toggle extends HTMLElement{\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.innerHTML = `\n      <style>\n        button {\n            cursor: pointer;\n            background: #fff;\n            box-shadow: none;\n            border:none;\n            font-size: 36px;\n            padding: 0;\n            letter-spacing: 2px;\n            border: 3px solid #555555;\n            border-radius: 30px;\n            overflow: hidden;\n        }\n        .esg-toggle-state {\n            padding: 8px 15px;\n        }\n\n        button span.on{\n            color: #555555;\n        }\n\n        button span.off{\n            background: #555555;\n            color: #fff;\n        }\n\n        button[aria-pressed=\"true\"] {\n            border-color: var(--primary-color);\n        }\n\n        button[aria-pressed=\"true\"] span.off {\n            background: none;\n            color: #555555;\n            opacity: 1;\n        }\n        button[aria-pressed=\"true\"] span.on{\n            background: var(--primary-color);\n            color: #fff;\n        }\n        .es-label {\n          width: 210px;\n          font-size: 32px;\n          display: inline-block;\n          letter-spacing: 1px;\n        }\n      </style>\n      <div class=\"esg-toggle esg-component\">\n        <span class=\"es-label\">${this.label}</span>\n        <button type=\"button\" role=\"switch\" aria-label=\"${this.label}\" id=\"${this.id}\">\n            <span class=\"esg-toggle-state on\">On</span><span class=\"esg-toggle-state off\">Off</span>\n        </button>\n      </div>\n    `;\n\n    this.shadowtoggleButton = this.shadowRoot.querySelector(\"button\");\n    this.shadowtoggleButtonLabel = this.shadowRoot.querySelector(\".es-label\");\n    this.handleToggle = this.handleToggle.bind(this);\n    this.toggleEvent = new CustomEvent(\"toggle\", {\n      detail: {\n        on: this.toggleOn\n      }\n    });\n  }\n\n  handleToggle () {\n    this.shadowtoggleButton.toggleAttribute(\"aria-pressed\");\n    this.toggleOn = this.toggleOn.toLowerCase() === 'true' ? false : true;\n    this.toggleEvent.detail.on = this.toggleOn;\n    this.dispatchEvent(this.toggleEvent);\n  }\n\n  connectedCallback() {\n    this.shadowtoggleButton.addEventListener(\"click\", this.handleToggle);\n  }\n\n  disconnectedCallback() {\n    this.shadowtoggleButton.removeEventListener(\"click\", this.handleToggle);\n  }\n\n  static get observedAttributes() {\n    return [\"id\", \"label\", \"toggle-on\"];\n  }\n\n  get id() {\n    return this.getAttribute(\"id\");\n  }\n\n  get label() {\n    return this.getAttribute(\"label\");\n  }\n\n  get toggleOn() {\n    return this.getAttribute(\"toggle-on\");\n  }\n\n  set id(id) {\n    this.setAttribute(\"id\", id);\n  }\n\n  set label(label) {\n    this.setAttribute(\"label\", label);\n  }\n\n  set toggleOn(toggleOnVal) {\n    this.setAttribute(\"toggle-on\", toggleOnVal);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch(name) {\n      case \"label\":\n        this.shadowtoggleButtonLabel.innerHTML = newValue;\n        this.shadowtoggleButton.setAttribute(\"aria-label\", newValue);\n        break;\n      case \"id\":\n        this.shadowtoggleButton.id = newValue;\n        break;\n      case \"toggle-on\":\n        this.shadowtoggleButton.setAttribute(\"aria-pressed\", newValue);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export default class Slider extends HTMLElement{\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.innerHTML = `\n      <style>\n        .esg-slider {\n            display: flex;\n            justify-content: space-between;\n            align-content: center;\n        }\n\n        .esg-slider__input {\n            flex-grow: 1;\n            cursor: pointer;\n            height: 25px;\n        }\n\n        .esg-slider__input::-moz-range-thumb,\n        .esg-slider__input::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            appearance: none;\n            width: 25px;\n            height: 25px;\n            background: var(--primary-color);\n            cursor: pointer;\n        }\n\n        label {\n          display: inline-block;\n          font-size: 32px;\n          width: 210px;\n          letter-spacing: 1px;\n        }\n\n        input[type=range] {\n          height: 34px;\n          -webkit-appearance: none;\n          margin: 10px 0;\n          background: none;\n        }\n\n        input[type=range]::-webkit-slider-runnable-track {\n          width: 100%;\n          height: 15px;\n          cursor: pointer;\n          animate: 0.2s;\n          background: var(--primary-color);\n          border-radius: 25px;\n        }\n\n        input[type=range]::-webkit-slider-thumb {\n          box-shadow: 1px 1px 1px #000031;\n          border: 1px solid rgba(0,0,0, .9);\n          height: 38px;\n          width: 38px;\n          border-radius: 50%;\n          background: #FFFFFF;\n          cursor: pointer;\n          -webkit-appearance: none;\n          margin-top: -13px;\n        }\n        input[type=range]:focus::-webkit-slider-runnable-track {\n          background: var(--primary-color);\n        }\n        input[type=range]::-moz-range-track {\n          width: 100%;\n          height: 11px;\n          cursor: pointer;\n          animate: 0.2s;\n          box-shadow: 1px 1px 1px #000000;\n          background: #0f4863;\n          border: 0px solid #010101;\n        }\n        input[type=range]::-moz-range-thumb {\n          box-shadow: 1px 1px 1px #000031;\n          border: 1px solid rgba(0,0,0, .9);\n          height: 38px;\n          width: 38px;\n          border-radius: 50%;\n          background: #FFFFFF;\n          cursor: pointer;\n          -webkit-appearance: none;\n          margin-top: -13px;\n        }\n      </style>\n      <div class=\"esg-slider esg-element\">\n        <label for=\"${this.id}\">${this.label}</label>\n        <input type=\"range\" step=\"0.1\" min=\"0\" max=\"1\" value=\"${this.value}\" id=\"${this.id}\" class=\"esg-slider__input\">\n      </div>\n    `;\n\n    this.labelElement = this.shadowRoot.querySelector(\".esg-slider label\");\n    this.inputElement = this.shadowRoot.querySelector(\".esg-slider input\");\n    this.handleChange = this.handleChange.bind(this);\n    this.volumeChangeEvent = new CustomEvent(\"volumechange\", {\n      detail: {\n        value: this.value\n      }\n    });\n  }\n\n\n  handleChange () {\n    this.value = this.inputElement.value;\n    this.volumeChangeEvent.detail.value = this.inputElement.value;\n    this.dispatchEvent(this.volumeChangeEvent);\n  }\n\n  connectedCallback() {\n    this.inputElement.addEventListener(\"change\", this.handleChange);\n  }\n\n  disconnectedCallback() {\n    this.inputElement.removeEventListener(\"change\", this.handleChange);\n  }\n\n  static get observedAttributes() {\n    return [\"id\", \"label\", \"value\"];\n  }\n\n  get id() {\n    return this.getAttribute(\"id\");\n  }\n\n  get label() {\n    return this.getAttribute(\"label\");\n  }\n\n  get value() {\n    return this.getAttribute(\"value\");\n  }\n\n  set id(id) {\n    this.setAttribute(\"id\", id);\n  }\n\n  set label(label) {\n    this.setAttribute(\"label\", label);\n  }\n\n  set value(value) {\n    this.setAttribute(\"value\", value);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch(name) {\n      case \"label\":\n        this.labelElement.textContent = newValue;\n        break;\n      case \"id\":\n        this.labelElement.setAttribute(\"for\", newValue);\n        this.inputElement.id = newValue;\n        break;\n      case \"value\":\n        this.inputElement.setAttribute(\"value\", newValue);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export default class HTMLElementBuilder {\n  constructor(tagName, textContent = \"\") {\n    this.element = document.createElement(tagName);\n    this.element.textContent = textContent;\n\n    return this;\n  }\n\n  addAttributes(attributes = {}) {\n    if(!attributes || attributes.constructor !== Object) {\n      return new Error(\"Parameter for addAriaAttributes should be an object. Example: {aria-label: \\\"Play\\\"\");\n    }\n\n    for (let attribute in attributes) {\n      let ariaAttributeValue = attributes[attribute];\n      this.element.setAttribute(attribute, ariaAttributeValue);\n    }\n\n    return this;\n  }\n\n  addClasses(...classNames) {\n    classNames.forEach((className) => {\n      this.element.classList.add(className);\n    });\n\n    return this;\n  }\n\n  appendElements(elements) {\n    const domElements = [].concat(elements || []);\n\n    domElements.forEach((element) => {\n      this.element.appendChild(element);\n    });\n\n    return this;\n  }\n\n  setInnerHtml(htmlString) {\n    this.element.innerHTML = htmlString;\n\n    return this;\n  }\n}\n","import {registerCustomPluginComponents} from \"./components/register\";\nimport HTMLElementBuilder from \"./utils/HTMLElementBuilder\";\n\nexport default class SoundA11yPlugin extends Phaser.Plugins.ScenePlugin {\n    constructor(scene, pluginManager) {\n        super(scene, pluginManager);\n        this.scene = scene;\n        this.captionBottomOffset = 80;\n        this.defaultModalX = 500;\n        this.defaultModalY = 100;\n    }\n\n    init(configData={}) {\n      const modalX = configData.modalX || 500;\n      const modalY = configData.modalY || 100;\n      const primaryColor = configData.primaryColor || \"#0d68c2\";\n      const captionsOn = configData.captionsOn || false;\n      const captions = configData.captions || {};\n      this.game.registry.set(\"captions\", captions);\n      this.game.registry.set(\"activeCaptions\", []);\n      this.game.registry.set(\"captionsOn\", captionsOn);\n      this._addOptionsUIElements(modalX, modalY, primaryColor);\n      this.game.sound.music.setVolume(configData?.volume?.music || .2);\n      this.game.sound.sfx.setVolume(configData?.volume?.sfx || .5);\n      this.game.sound.voice.setVolume(configData?.volume?.voice || 1);\n    }\n\n    //  Called when the Plugin is booted by the PluginManager.\n    //  If you need to reference other systems in the Scene (like the Loader or DisplayList) then set-up those references now, not in the constructor.\n    boot() {\n      registerCustomPluginComponents();\n      this._registerSoundChannels();\n      this._buildRegistry();\n      this._injectCaptionCSS();\n    }\n\n    //  Called when a Scene is destroyed by the Scene Manager. There is no coming back from a destroyed Scene, so clear up all resources here.\n    destroy() {\n        this.shutdown();\n        this.scene = undefined;\n    }\n\n    add(channel, name, config={}) {\n      return this.game.sound[channel].add(name, config);\n    }\n\n    stop(channel=null) {\n      if(channel != null) {\n        this.game.sound[channel].stopAll();\n\n        if(channel != \"music\") this._removeCaptions();\n\n      } else {\n        this.game.sound.music.stopAll();\n        this.game.sound.sfx.stopAll();\n        this.game.sound.voice.stopAll();\n        this._removeCaptions();\n      }\n    }\n\n    play(soundObject, marker=null, config={}) {\n      return new Promise(function(resolve, reject) {\n        try {\n          this._playCaptionedSound(soundObject, marker, config).then(() => {\n            resolve(soundObject);\n          }).catch((error) => {\n            reject(error)\n          });\n        } catch (error) {\n          reject(error);\n        }\n      }.bind(this));\n    }\n\n    _playCaptionedSound(soundObject, marker=null, config={}) {\n      soundObject.manager.stopAll();\n      return new Promise(function (resolve, reject) {\n      try {\n        const markers = Object.keys(soundObject.markers);\n        if(markers.length === 0) {\n          this._startCaptionedAudio(soundObject, marker, config);\n\n          soundObject.on('complete', (function() {\n            this._removeCaptions();\n            soundObject.removeAllListeners();\n            resolve(soundObject);\n          }).bind(this));\n\n          return soundObject;\n        }\n\n        // setting up the generator to play subsequent markers after the\n        // sound object has completed playing.\n        const soundMarkerGenerator = this._SoundMarkerIterator(markers);\n        soundObject.on(\"complete\", () => {\n          const currentMarker = soundMarkerGenerator.next();\n          if (currentMarker.done) {\n            this._removeCaptions();\n            soundObject.removeAllListeners();\n            resolve(soundObject);\n          } else {\n            this._startCaptionedAudio(soundObject, currentMarker.value, config);\n          }\n        });\n\n        this._startCaptionedAudio(soundObject, markers[0], config);\n      } catch(error) {\n        reject(error);\n      }\n    }.bind(this));\n    }\n\n    _startCaptionedAudio(soundObject, marker=null, config={}) {\n      this._removeCaptions();\n\n      soundObject.on('play', (function() {\n        if(this.game.registry.get(\"captionsOn\")) {\n          const captionElement = this._addCaptions(marker || soundObject.key);\n          let activeCaptions = this.game.registry.get(\"activeCaptions\");\n          activeCaptions.push(captionElement);\n          this.game.registry.set(\"activeCaptions\", activeCaptions);\n        }\n      }).bind(this));\n\n\n      this._playSound(soundObject, marker, config);\n\n      return soundObject;\n    }\n\n    _playSound(soundObject, marker, config) {\n      soundObject.manager.stopAll();\n      return new Promise(function(resolve, reject) {\n        try {\n          let sound;\n          if (marker) {\n            soundObject.play(marker, config);\n          } else {\n            soundObject.play(config);\n          }\n\n          soundObject.on(\"complete\", () => resolve(sound));\n        } catch (error) {\n          reject( error);\n        }\n      });\n    }\n\n    _removeCaptions() {\n      const activeCaptions = this.game.registry.get(\"activeCaptions\");\n      activeCaptions.forEach((caption) => {\n        caption.remove();\n      });\n    }\n\n    _addCaptions(captionKey) {\n      this._removeCaptions();\n      const captionHtmlElement = new HTMLElementBuilder(\"div\");\n      captionHtmlElement.addClasses(\"captions\");\n      const captions = this.game.registry.get(\"captions\");\n      if(captionKey in captions) {\n        captionHtmlElement.appendElements(this._createCaptionCueElement(captions[captionKey]));\n      } else {\n        console.warn(`caption key: ${captionKey} was not found in captions`);\n      }\n\n      this.scene.add.dom(this.game.config.width/2, this.game.config.height-this.captionBottomOffset,\n        captionHtmlElement.element).setOrigin(.5, 1).setDepth(900);\n\n      return captionHtmlElement.element;\n    }\n\n    _createCaptionCueElement(cueText) {\n      const captionCueElement = new HTMLElementBuilder(\"p\", cueText);\n      captionCueElement.addClasses(\"cue\");\n\n      return captionCueElement.element;\n    }\n\n    * _SoundMarkerIterator(markers) {\n      for(let i=1; i < markers.length; i++) {\n        yield markers[i];\n      }\n\n      return;\n    }\n\n    _buildRegistry() {\n      if(!window.hasOwnProperty(\"esparkGame\")) {\n        this.game.registry.set({\n          captionsOn: true,\n          cssInjected: false,\n          captions: {},\n          activeCaptions: []\n        });\n\n        window.esparkGame = this.game;\n      }\n    }\n\n    _registerSoundChannels () {\n      if(this.game.sound && !this.game.sound.hasOwnProperty(\"sfx\")) {\n        this.game.sound.sfx = Phaser.Sound.SoundManagerCreator.create(this.game)\n      }\n\n      if(this.game.sound && !this.game.sound.hasOwnProperty(\"voice\")) {\n        this.game.sound.voice = Phaser.Sound.SoundManagerCreator.create(this.game)\n      }\n\n      if(this.game.sound && !this.game.sound.hasOwnProperty(\"music\")) {\n        this.game.sound.music = Phaser.Sound.SoundManagerCreator.create(this.game)\n      }\n    }\n\n    _addOptionsUIElements(modalX, modalY, primaryColor) {\n      const optionsModalBuilder = new HTMLElementBuilder(\"options-modal\")\n        .addAttributes({\"open\": false, \"id\": \"options-modal\", \"color\": primaryColor});\n\n      this.scene.add.dom(modalX, modalY, optionsModalBuilder.element).setDepth(1000);\n\n      const optionsButtonBuilder = new HTMLElementBuilder(\"options-button\")\n        .addAttributes({\"modal-id\": \"options-modal\", color: primaryColor});\n      this.scene.add.dom(this.game.config.width - 100, 100, optionsButtonBuilder.element).setDepth(1000);\n    }\n\n    _injectCaptionCSS() {\n      if(!this.game.registry.get(\"cssInjected\")) {\n        const cssStyles = `\n        .captions {\n            z-index: 100;\n            max-width: 75%;\n          }\n\n        .captions .cue {\n            color: white;\n            font-size: 48px;\n            background: rgba(0,0,0, .8);\n            padding:5px 10px;\n            width: fit-content;\n            margin: 0 auto;\n            text-align: center;\n            font-family: Arial, Helvetica, sans-serif;\n          }\n        `;\n        const css = document.createElement(\"style\");\n        css.textContent = cssStyles;\n        document.body.appendChild(css);\n        this.game.registry.set(\"cssInjected\", true);\n      }\n    }\n}\n","import OptionsModal from \"./options/OptionsModal\";\nimport OpenOptionsButton from \"./options/OpenOptionsButton\";\nimport Toggle from \"./options/Toggle\";\nimport Slider from \"./options/Slider\";\n\nexport const registerCustomPluginComponents = () => {\n  if(!customElements.get('options-button')) {\n    customElements.define('options-button', OpenOptionsButton);\n  }\n\n  if(!customElements.get('options-modal')) {\n    customElements.define('options-modal', OptionsModal);\n  }\n\n  if(!customElements.get('esg-slider')) {\n    customElements.define('esg-slider', Slider);\n  }\n\n  if(!customElements.get('esg-toggle')) {\n    customElements.define('esg-toggle', Toggle);\n  }\n}\n\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","OptionsModal","HTMLElement","constructor","super","this","CAPTIONS_KEY","VOICE_SOUND_MANAGER_ID","MUSIC_SOUND_MANAGER_ID","SFX_SOUND_MANAGER_ID","_captionToggleHandler","bind","_voiceVolumeChangeHandler","_musicVolumeChangeHandler","_sfxVolumeChangeHandler","_closeClickHandler","_soundChannelVolumeChange","_removeActiveCaptions","attachShadow","mode","shadowRoot","innerHTML","captionsToggleElement","getElementById","voiceSliderElement","musicSliderElement","sfxSliderElement","modalElement","querySelector","closeButton","header","modalContent","event","detail","on","window","esparkGame","registry","set","_changeSoundManagerVolume","soundManagerKey","sound","volume","open","_getOppositeValueOfValueAttr","setAttribute","scene","getScenes","forEach","input","mouse","enabled","isOpen","channel","slider","delay","setTimeout","newVolume","clearTimeout","caption","remove","connectedCallback","addEventListener","disconnectedCallback","removeEventListener","observedAttributes","getAttribute","color","icon","attributeChangedCallback","name","oldValue","newValue","style","setProperty","_handleOnClick","buttonElement","modal","console","warn","focus","document","modalId","Toggle","label","id","shadowtoggleButton","shadowtoggleButtonLabel","handleToggle","toggleEvent","CustomEvent","toggleOn","toggleAttribute","toLowerCase","dispatchEvent","toggleOnVal","Slider","labelElement","inputElement","handleChange","volumeChangeEvent","textContent","HTMLElementBuilder","tagName","element","createElement","addAttributes","attributes","Error","attribute","ariaAttributeValue","addClasses","classNames","className","classList","add","appendElements","elements","concat","appendChild","setInnerHtml","htmlString","SoundA11yPlugin","Phaser","Plugins","ScenePlugin","pluginManager","captionBottomOffset","defaultModalX","defaultModalY","init","configData","modalX","modalY","primaryColor","captionsOn","captions","game","_addOptionsUIElements","music","setVolume","sfx","voice","boot","customElements","_registerSoundChannels","_buildRegistry","_injectCaptionCSS","destroy","shutdown","undefined","config","stop","stopAll","_removeCaptions","play","soundObject","marker","Promise","resolve","reject","_playCaptionedSound","then","catch","error","manager","markers","keys","length","_startCaptionedAudio","removeAllListeners","soundMarkerGenerator","_SoundMarkerIterator","currentMarker","next","done","captionElement","_addCaptions","activeCaptions","push","_playSound","captionKey","captionHtmlElement","_createCaptionCueElement","dom","width","height","setOrigin","setDepth","cueText","captionCueElement","i","cssInjected","Sound","SoundManagerCreator","create","optionsModalBuilder","optionsButtonBuilder","cssStyles","css","body"],"sourceRoot":""}